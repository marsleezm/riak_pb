// Java package specifiers
option java_package = "com.basho.riak.protobuf";
option java_outer_classname = "AntidotePB";

//Interactive transaction interface
message FpbStartTxnReq {
    optional uint64 clock = 1;
}

message FpbPrepTxnReq {
    required FpbTxId txid = 1;
    optional FpbNodeUps local_updates = 2;
    optional FpbNodeUps remote_updates = 3;
}

message FpbNodeUps {
    repeated FpbPerNodeUp per_nodeup = 1;
}

message FpbPerNodeUp {
    required bytes node = 1;
    required uint32 partition = 2;
    repeated FpbUpdate ups = 3; 
}

message FpbPrepTxnResp {
    required bool success = 1;
    optional uint64 commit_time = 2;
}

message FpbReadReq {
    required FpbTxId txid = 1;
    required bytes key = 2;
}

message FpbPartListReq {
}

message FpbPartList {
    repeated FpbNodePart node_parts = 1;
}

message FpbNodePart {
    required bytes ip = 1;
    repeated uint64 partitions = 2 ;
}

message FpbUpdate {
    required bytes key = 1;
    required bytes value = 2;
}

//General transaction that contains all transaction code 
message FpbTxnReq {
	optional bytes clock = 1;
    repeated FpbTxnOp ops = 2;
}

message FpbTxnOp {
    required uint32 type = 1;
    required uint32 key = 2;
    optional uint32 operation = 3;
    optional bytes parameter = 4;
}

//Operation possible inside atomic update transaction
message FpbTxnResp {
	required bool success = 1;
	optional bytes clock = 2;
	repeated FpbValue results = 3;
}

//Response for a transaction
message FpbValue {
    required bytes value = 1;
}

message FpbTxId {
    required uint64 snapshot = 1;
    required bytes pid = 2;
}
